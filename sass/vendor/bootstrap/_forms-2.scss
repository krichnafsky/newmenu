//
// Forms
// --------------------------------------------------


// GENERAL STYLES
// --------------

// Make all forms have space below them
form {
  margin: 0 0 $baseLineHeight;
}

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
}

// Groups of fields with labels on top (legends)
legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $baseLineHeight;
  font-size: $baseFontSize * 1.5;
  line-height: $baseLineHeight * 2;
  color: $grayDark;
  border: 0;
  border-bottom: 1px solid #e5e5e5;

  // Small
  small {
    font-size: $baseLineHeight * .75;
    color: $grayLight;
  }
}

// Set font for forms
label,
input,
button,
select,
textarea {
  @include font-shorthand($baseFontSize, normal, $baseLineHeight); // Set size, weight, line-height here
}
input,
button,
select,
textarea {
  font-family: $baseFontFamily; // And only set font-family here for those that need it (note the missing label element)
}

// Identify controls by their labels
label {
  display: block;
  margin-bottom: 5px;
}

// Form controls
// -------------------------

// Shared size and type resets
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
  display: inline-block;
  // height: $baseLineHeight; //*1.5; //mod by keith
  padding: 4px 2px; // mod by keith 4px 6px;
  margin-bottom: $baseLineHeight / 2;;
  font-size: $baseFontSize;
  // line-height: $baseLineHeight;
  color: $gray;
  @include border-radius($inputBorderRadius);
  vertical-align: middle;
  .lt-ie8 & {
    height: $baseLineHeight*1.1;
  }
}

// Reset appearance properties for textual inputs and textarea
// Declare width for legacy (can't be on input[type=*] selectors or it's too specific)
input,
textarea,
.uneditable-input {
  width: auto; //206px plus 12px padding and 2px border
}
// Reset height since textareas have rows
textarea {
  height: auto;
}
// Everything else
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
  background-color: $inputBackground;
  border: 1px solid $inputBorder;
  @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  @include transition(border linear .2s, box-shadow linear .2s);

  // Focus state
  &:focus {
    border-color: rgba(82,168,236,.8);
    outline: 0;
    outline: thin dotted \9; /* IE6-9 */
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6));
  }
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  *margin-top: 0; /* IE7 */
  margin-top: 1px \9; /* IE8-9 */
  line-height: normal;
  cursor: pointer;
}

// Reset width of input images, buttons, radios, checkboxes
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
  width: auto; // Override of generic input selector
}

// Set the height of select and file controls to match text inputs
select,
input[type="file"] {
  height: $inputHeight; /* In IE7, the height of the select element cannot be changed by height, only font-size */
  *margin-top: 4px; /* For IE7, add top margin to align select with labels */
  line-height: $inputHeight;
}

// Make select elements obey height by applying a border
select {
  width: 220px; // default input width + 10px of padding that doesn't get applied
  border: 1px solid $inputBorder;
  background-color: $inputBackground; // Chrome on Linux and Mobile Safari need background-color
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for select, file, radio, and checkbox
select:focus,
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  @include tab-focus();
}

// Form group - row
.form-group {
  @include row; //_grid row setup
}

// For labels
.form-label {
  float: none;
  width: auto;
  padding-top: 5px;
  text-align: left;
}

// Ability to center align buttons within a form.
.form-controls {
  width: columns(10);
  margin-top: 1%;
  overflow: hidden;
  text-align: center;
}


// Uneditable inputs
// -------------------------

// Make uneditable inputs look inactive
.uneditable-input,
.uneditable-textarea {
  color: $grayLight;
  background-color: darken($inputBackground, 1%);
  border-color: $inputBorder;
  @include box-shadow(inset 0 1px 2px rgba(0,0,0,.025));
  cursor: not-allowed;
}

// For text that needs to appear as an input but should not be an input
.uneditable-input {
  overflow: hidden; // prevent text from wrapping, but still cut it off like an input does
  white-space: nowrap;
}

// Make uneditable textareas behave like a textarea
.uneditable-textarea {
  width: auto;
  height: auto;
}


// Placeholder
// -------------------------

// Placeholder text gets special styles because when browsers invalidate entire lines if it doesn't understand a selector
input,
textarea {
  @include placeholder();
}


// CHECKBOXES & RADIOS
// -------------------

// Indent the labels to position radios/checkboxes as hanging
.radio,
.checkbox {
  min-height: $baseLineHeight; // clear the floating input if there is no label text
  padding-left: 10px;
  padding-right: 5px;
}
.radio input[type="radio"],
.checkbox input[type="checkbox"] {
  float: left;
  margin-left: -20px;
}

// Radios and checkboxes on same line
// TODO v3: Convert .inline to .control-inline
.radio.inline,
.checkbox.inline {
  display: inline-block;
  margin-top: -5px;
  margin-bottom: 0;
  vertical-align: middle;
}
.radio.inline + .radio.inline,
.checkbox.inline + .checkbox.inline {
  margin-left: 10px; // space out consecutive inline controls
}

// INPUT SIZES
// -----------

// General classes for quick sizes
.col1 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(1);
  }
}
.col2 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(2);
  }
}
.col3 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(3);
  }
}
.col4 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(4);
  }
}
.col5 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(5);
  }
}
.col6 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(6);
  }
}
.col7 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(7);
  }
}
.col8 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(8);
  }
}
.col9 {
  width: columns(10);
  @media screen and (min-width: 43.75em){
    width: columns(9);
  }
}
.col10 {
  width: columns(10);
}


// DISABLED STATE
// --------------

// Disabled and read-only inputs
input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
  cursor: not-allowed;
  background-color: $inputDisabledBackground;
}
// Explicitly reset the colors here
input[type="radio"][disabled],
input[type="checkbox"][disabled],
input[type="radio"][readonly],
input[type="checkbox"][readonly] {
  background-color: transparent;
}

// FORM FIELD FEEDBACK STATES
// --------------------------
// Changed from control-group to be for specific html element; div
// Gives the ability to make a whole row appear as warning, error, success, or info
// Also have the ability to give individual elements, i.e. labels, inputs, selects etc...
// Warning
div.warning {
  @include formFieldState($warningText, $warningText, $warningBackground);
}
.warning-label {
  @include formIndividualFieldState($warningText);
}
.warning-input,
.warning-input[type="text"],
.warning-input[type="password"],
.warning-input[type="date"],
.warning-input[type="number"],
.warning-input[type="email"],
.warning-input[type="url"],
.warning-input[type="search"],
.warning-input[type="tel"] {
  @include formIndividualFieldState($warningText, $warningText, $warningBackground);
}
// Error
div.error {
  @include formFieldState($errorText, $errorText, $errorBackground);
}
.error-label {
  @include formIndividualFieldState($errorText);
}
.error-input,
.error-input[type="text"],
.error-input[type="password"],
.error-input[type="date"],
.error-input[type="number"],
.error-input[type="email"],
.error-input[type="url"],
.error-input[type="search"],
.error-input[type="tel"] {
  @include formIndividualFieldState($errorText, $errorText, $errorBackground);
}
// Success
div.success {
  @include formFieldState($successText, $successText, $successBackground);
}
.success-label {
  @include formIndividualFieldState($successText);
}
.success-input,
.success-input[type="text"],
.success-input[type="password"],
.success-input[type="date"],
.success-input[type="number"],
.success-input[type="email"],
.success-input[type="url"],
.success-input[type="search"],
.success-input[type="tel"] {
  @include formIndividualFieldState($successText, $successText, $successBackground);
}
// Info
div.info {
  @include formFieldState($infoText, $infoText, $infoBackground);
}
.info-label {
  @include formIndividualFieldState($infoText);
}
.info-input,
.info-input[type="text"],
.info-input[type="password"],
.info-input[type="date"],
.info-input[type="number"],
.info-input[type="email"],
.info-input[type="url"],
.info-input[type="search"],
.info-input[type="tel"] {
  @include formIndividualFieldState($infoText, $infoText, $infoBackground);
}


// HTML5 invalid states
// Shares styles with the div.error above
input:focus:required:invalid,
textarea:focus:required:invalid,
select:focus:required:invalid {
  color: #b94a48;
  border-color: #ee5f5b;
  &:focus {
    border-color: darken(#ee5f5b, 10%);
    @include box-shadow(0 0 6px lighten(#ee5f5b, 20%));
  }
}

// HELP TEXT
// ---------

.help-block,
.help-inline {
  color: lighten($textColor, 15%); // lighten the text some for contrast
}

.help-block {
  display: block; // account for any element using help-block
  margin-bottom: $baseLineHeight / 2;
}

.help-inline {
  display: inline-block;
  @include ie7-inline-block();
  vertical-align: middle;
  padding-left: 5px;
}


// INPUT GROUPS
// ------------

// Allow us to put symbols and text within the input field for a cleaner look
.input-append,
.input-prepend {
  margin-bottom: 5px;
  font-size: 0; // white space collapse hack
  white-space: nowrap; // Prevent span and input from separating

  // Reset the white space collapse hack
  input,
  select,
  .uneditable-input,
  .dropdown-menu {
    font-size: $baseFontSize;
  }

  input,
  select,
  .uneditable-input {
    position: relative; // placed here by default so that on :focus we can place the input above the .add-on for full border and box-shadow goodness
    margin-bottom: 0; // prevent bottom margin from screwing up alignment in stacked forms
    *margin-left: 0;
    vertical-align: top;
    @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
    // Make input on top when focused so blue border and shadow always show
    &:focus {
      z-index: 2;
    }
  }
  .add-on {
    display: inline-block;
    width: auto;
    height: $baseLineHeight; //*1.5; //mod by keith
    min-width: 16px;
    padding: 4px 5px;
    font-size: $baseFontSize;
    font-weight: normal;
    line-height: $baseLineHeight;
    text-align: center;
    text-shadow: 0 1px 0 $white;
    background-color: $grayLighter;
    border: 1px solid #ccc;
    .lt-ie8 & {
      height: $baseLineHeight*1.1;
    }
  }
  .add-on,
  .btn {
    vertical-align: top;
    @include border-radius(0);
  }
  .active {
    background-color: lighten($flat-green, 30);
    border-color: $flat-green;
  }
}

.input-prepend {
  .add-on,
  .btn {
    margin-right: -1px;
  }
  .add-on:first-child,
  .btn:first-child {
    // FYI, `.btn:first-child` accounts for a button group that's prepended
    @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);
  }
}

.input-append {
  input,
  select,
  .uneditable-input {
    @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);
    + .btn-group .btn {
      @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
    }
  }
  .add-on,
  .btn,
  .btn-group {
    margin-left: -1px;
  }
  .add-on:last-child,
  .btn:last-child {
    @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
  }
}

// Remove all border-radius for inputs with both prepend and append
.input-prepend.input-append {
  input,
  select,
  .uneditable-input {
    @include border-radius(0);
    + .btn-group .btn {
      @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
    }
  }
  .add-on:first-child,
  .btn:first-child {
    margin-right: -1px;
    @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);
  }
  .add-on:last-child,
  .btn:last-child {
    margin-left: -1px;
    @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
  }
  .btn-group:first-child {
    margin-left: 0;
  }
}

// SEARCH INPUT
// -----------
input.search-query {
  padding-right: 14px;
  padding-right: 4px \9;
  padding-left: 14px;
  padding-left: 4px \9; /* IE7-8 doesn't have border-radius, so don't indent the padding */
  margin-bottom: 0; // Remove the default margin on all inputs
  @include border-radius(15px);
}

//Allow for input prepend/append in search forms
.input-append .search-query,
.input-prepend .search-query {
  @include border-radius(0); // Override due to specificity
}
.input-append .search-query {
  @include border-radius(14px 0 0 14px);
}
.input-prepend .search-query {
  @include border-radius(0 14px 14px 0);
}


// INLINE FORMS
// ---------------------------

.form-inline label,
.form-inline .btn-group {
   display: inline-block;
}
// // Remove margin for input-prepend/-append
.form-inline .input-append,
.form-inline .input-prepend {
   margin-bottom: 0;
 }
// // Inline checkbox/radio labels (remove padding on left)
.form-inline .radio,
.form-inline .checkbox {
  padding-left: 0;
  margin-bottom: 0;
  vertical-align: middle;
}
// // Remove float and margin, set to inline-block
.form-inline .radio input[type="radio"],
.form-inline .checkbox input[type="checkbox"] {
  float: left;
  margin-right: 3px;
  margin-left: 0;
}